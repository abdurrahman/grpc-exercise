syntax = "proto3";

package routeguide;

// Interface exported by the server.
service RouterGuide {
    // Obtains the feature at a given position.
    rpc GetFeature(Point) returns (Feature) {}

    // Obtains the Features available within the given Rectangle.  Results are
    // streamed rather than returned at once (e.g. in a response message with a
    // repeated field), as the rectangle may cover a large area and contain a
    // huge number of features.
    rpc ListFeatures(Rectangle) returns (stream Feature) {}

    // Accepts a stream of Points on a route being traversed, returning a
    // RouteSummary when traversal is completed.
    rpc RecordRoute(stream Point) returns (RouteSummary) {}

    // Accepts a stream of RouteNotes sent while a route is being traversed,
    // while receiving other RouteNotes (e.g. from other users)
    rpc RouteChat(stream RouteNote) returns (stream RouteNote) {}
}

message Point {
    int32 latitude = 1;
    int32 longitude = 2;
}

message Rectangle {
      // One corner of the rectangle.
    Point lo = 1;
    
    // The other corner of the rectangle.
    Point hi = 2;
}

message Feature {
    // The name of the feature.
    string name = 1;

    // The point where the feature is detected.
    Point location = 2;
}

message RouteNote {
    // The location from which the message is sent.
    Point location = 1;
    
    // The message to be sent.
    string message = 2;
}

message RouteSummary {
    // The number pf points received.
    int32 point_count = 1;

    // The number of known features passed while traversing the route.
    int32 feature_count = 2;

    // The distance covered in metres.
    int32 distance = 3;

    // The duration of the traversal in seconds.
    int32 elapsed_time = 4;
}